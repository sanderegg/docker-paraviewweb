# SAN using https://www.exratione.com/2014/03/running-nginx-as-a-non-root-user/
# to make nginx run in user mode

# This error log will be written regardless of server scope error_log
# definitions, so we have to set this here in the main scope.
#
# Even doing this, Nginx will still try to create the default error file, and
# log a non-fatal error when it fails. After that things will work, however.
error_log /tmp/error.log;

# The pidfile will be written to /var/run unless this is set.
pid /tmp/nginx.pid;

events {
    worker_connections  128;
}

http {
	# Set an array of temp and cache file options that will otherwise default to
	# restricted locations accessible only to root.
	client_body_temp_path /tmp/client_body;
	fastcgi_temp_path /tmp/fastcgi_temp;
	proxy_temp_path /tmp/proxy_temp;
	scgi_temp_path /tmp/scgi_temp;
	uwsgi_temp_path /tmp/uwsgi_temp;

	map $http_upgrade $connection_upgrade {
	       	default upgrade;
	       	''      close;
	}

	server {
		listen   8777;
		server_name 0.0.0.0; 

		location / {
			proxy_pass http://127.0.0.1:9777;

			add_header Access-Control-Allow-Origin *;
			add_header 'Access-Control-Allow-Credentials' 'true';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With';

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
		        proxy_set_header Connection $connection_upgrade;
		}
	}
}